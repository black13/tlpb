set(Main_SRCS
 
)
include_directories(${PROJECT_SOURCE_DIR}/daemons)
include_directories(${PROJECT_SOURCE_DIR}/lib)
include_directories(${PROJECT_SOURCE_DIR}/users_groups)
include_directories(${PROJECT_SOURCE_DIR}/time)
find_package( Threads )

ADD_EXECUTABLE( acct_on acct_on.c )
target_link_libraries( acct_on lib )
ADD_EXECUTABLE( acct_v3_view acct_v3_view.c ${PROJECT_SOURCE_DIR}/users_groups/ugid_functions.c)
target_link_libraries( acct_v3_view lib )
ADD_EXECUTABLE( acct_view acct_view.c  ${PROJECT_SOURCE_DIR}/users_groups/ugid_functions.c)
target_link_libraries( acct_view lib )
ADD_EXECUTABLE( child_status child_status.c print_wait_status.c)
target_link_libraries( child_status lib )
ADD_EXECUTABLE( closeonexec closeonexec.c print_wait_status.c)
target_link_libraries( closeonexec lib )
ADD_EXECUTABLE( demo_clone demo_clone.c print_wait_status.c)
target_link_libraries( demo_clone lib )
ADD_EXECUTABLE( envargs envargs.c print_wait_status.c print_wait_status.c)
target_link_libraries( envargs lib )
#ADD_EXECUTABLE( execlp execlp.c print_wait_status.c print_wait_status.c)
#target_link_libraries( execlp lib )
ADD_EXECUTABLE( exit_handlers exit_handlers.c )
target_link_libraries( exit_handlers lib )
ADD_EXECUTABLE( footprint footprint.c )
target_link_libraries( footprint lib )
ADD_EXECUTABLE( fork_file_sharing fork_file_sharing.c )
target_link_libraries( fork_file_sharing lib )
ADD_EXECUTABLE( fork_sig_sync fork_sig_sync.c )
target_link_libraries( fork_sig_sync lib ${PROJECT_SOURCE_DIR}/time/curr_time.c)
ADD_EXECUTABLE( fork_stdio_buf fork_stdio_buf.c )
target_link_libraries( fork_stdio_buf lib )
ADD_EXECUTABLE( fork_whos_on_first fork_whos_on_first.c )
target_link_libraries( fork_whos_on_first lib )
ADD_EXECUTABLE( make_zombie make_zombie.c )
target_link_libraries( make_zombie lib )
ADD_EXECUTABLE( multi_SIGCHLD multi_SIGCHLD.c print_wait_status.c ${PROJECT_SOURCE_DIR}/time/curr_time.c)
target_link_libraries( multi_SIGCHLD lib )
ADD_EXECUTABLE( multi_wait multi_wait.c ${PROJECT_SOURCE_DIR}/time/curr_time.c)
target_link_libraries( multi_wait lib )
ADD_EXECUTABLE( necho necho.c )
target_link_libraries( necho lib )
ADD_EXECUTABLE( orphan orphan.c )
target_link_libraries( orphan lib )

ADD_EXECUTABLE( t_clone t_clone.c )
target_link_libraries( t_clone lib )
ADD_EXECUTABLE( t_execl t_execl.c )
target_link_libraries( t_execl lib )
ADD_EXECUTABLE( t_execle t_execle.c )
target_link_libraries( t_execle lib )
ADD_EXECUTABLE( t_execlp t_execlp.c )
target_link_libraries( t_execlp lib )
ADD_EXECUTABLE( t_execve t_execve.c )
target_link_libraries( t_execve lib )
ADD_EXECUTABLE( t_fork t_fork.c )
target_link_libraries( t_fork lib )
ADD_EXECUTABLE( t_system t_system.c print_wait_status.c )
target_link_libraries( t_system lib )
ADD_EXECUTABLE( t_vfork t_vfork.c )
target_link_libraries( t_vfork lib )
ADD_EXECUTABLE( vfork_fd_test vfork_fd_test.c )
target_link_libraries( vfork_fd_test lib )

include_directories(${PROJECT_SOURCE_DIR}/lib)
